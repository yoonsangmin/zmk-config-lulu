// Copyright 2022 jack (@waffle87)
// SPDX-License-Identifier: MIT

#include <dt-bindings/zmk/matrix_transform.h>

/ {
    chosen {
      zmk,kscan = &kscan0;
      zmk,matrix_transform = &default_transform;
      zephyr,display = &oled;
    };

    default_transform: keymap_transform_0 {
      compatible = "zmk,matrix-transform";
      columns = <16>;
      rows = <5>;
      map = <
RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5)                 RC(0,6) RC(0,7) RC(0,8) RC(0,9) RC(0,10) RC(0,11)
RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5)                 RC(1,6) RC(1,7) RC(1,8) RC(1,9) RC(1,10) RC(1,11)
RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5)                 RC(2,6) RC(2,7) RC(2,8) RC(2,9) RC(2,10) RC(2,11)
RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5) RC(4,5) RC(4,6) RC(3,6) RC(3,7) RC(3,8) RC(3,9) RC(3,10) RC(3,11)
                        RC(4,1) RC(4,2) RC(4,3) RC(4,4) RC(4,7) RC(4,8) RC(4,9) RC(4,10)
      >;
    };
    kscan0: kscan {
      compatible = "zmk,kscan-gpio-matrix";
      label = "KSCAN";
      diode-direction = "col2row";
      row-gpios =
        <&pro_micro 5 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
        <&pro_micro 6 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
        <&pro_micro 7 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
        <&pro_micro 8 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
        <&pro_micro 9 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>;
    };
    left_encoder: encoder_left {
      compatible = "alps,ec11";
      label = "LEFT_ENCODER";
      a-gpios = <&pro_micro 21 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
      b-gpios = <&pro_micro 20 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
      resolution = <4>;
    };
  };

&pro_micro_i2c {
  status = "okay";
  oled: ssd1306@3c {
    compatible = "solomon,ssd13066fb";
    reg = <0x3c>;
    label = "DISPLAY";
    width = <128>;
    height = <32>;
    segment-offset = <0>;
    page-offset = <0>;
    display-offset = <0>;
    multiplex-ration = <31>;
    segment-remap;
    com-invdir;
    com-sequential;
    prechargep = <0x22>;
  };
};
